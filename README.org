* Installation

Rename the IY_FE_SPARK.lua file to IY_FE_SPARK.iy and copy the IY_FE_SPARK.iy file into your executors "Workspace" folder

Reload your game/executor and run command "reloadplugin IY_FE_SPARK" into your Infinite Yield

* TODO
   - X Optimise the Prisonlife:FastRespawn("Criminals") function to be instantly teleported contacting the criminal pad, and properly wait till user has changed teams before teleporting back. Also look into how user is able to keep skin when turned to criminal (Potentially via converting user to guard before touching pad?)
   - X Prison Life command to grab guns automatically grab guns/again on respawn
   - X Optimise the new Prisonlife kill method, allow it to be used whilst pistol is in backpack or drawn, properly wait till user has changed teams (if necessary) before teleporting to gun, and properly wait till user has gun before tp'ing back/executing kill. (Can utilise new grab gun function)
   - Debug GUI (Able to show current executing jobs, list of jobs etc.)
   - Interactive GUI allowing user to easily select jobs and target(s)/team(s)
   - Revamp the Refreshplayers function into smaller functions (One for init, player joined and player deleted) as right now it is destructive (Clears the whole job queue etc) when it comes to refreshing (NOW DONE BUT NEEDS TESTING, APPEARS TO NOT BE WORKING. PLAYERHANDLER CEASES FUNCTION)
   - Playerhandler variables override (To override the ignore self, ignore forcefield, ignore friends etc variables)
   - Click tp, Prison Life sword and Prison Life click kill tools. Add option for player handler to be called non interactively so therefore no notifications
   - PL Killaura adminhandler override utilising headsit or the like
   - PL auto grab armour/shield
   - Prison life car bring command
   - Potential feature, as bring is broken. Could try an experimental bring using cars.
   - General optimisation/code cleanup (Replacing if statements/breaks/continues and merging them into their respective while statment, or merging multiple if statements into one, or variables such as the first init variables that may not be necessary, getTablesize is probably unnecessary as you can use #table syntax)
   - Go through and ensure that we are still checking that the target player/character still exists throughout the job handler process
   - Remove unecessary pcalls
   - Split script into modules
   - Add support for custom adminhandler prefix
   - Automatic game detection/appending to the Plugins table as appropriate based on game
   - (New ideal solution idea : Use a FindFirstChild or WaitForChild with a very small delay. If it fails then the longer WaitForChild check can occur. Should allow for very fast execution) Look at potentially improving the job handler wait for forcefield mechanic, instead of using WaitForChild with a yield of 1 second it may be instead possible to use ChildAdded and :Wait() to check for forcefield (when user spawns specifically this is important for). May be faster? Or just figure out what time specifically the ForceField is added on spawn so we can just set the yield to that time instead of 1 second.
   - FIX POTENTIAL RARE BUG : When users spawn and job starts waiting for forcefield but then they die again or something like that, appears to crash game? (the wait(0.1) command at line 94 may have fixed this but need further testing)

